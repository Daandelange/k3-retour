name: CI
on: [push, pull_request]

jobs:
  tests:
    name: PHP ${{ matrix.php }} (${{ matrix.dependencies }} deps)

    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ["7.4", "8.0", "8.1"]
        dependencies: ["lowest", "locked"]
    env:
      extensions: mbstring, pcov
      ini: pcov.directory=., "pcov.exclude=\"~(vendor|tests)~\""

    steps:
      - name: Checkout
        uses: actions/checkout@f1d3225b5376a0791fdee5a0e8eac5289355e43a # pin@v2

      - name: Setup PHP cache environment
        id: ext-cache
        uses: shivammathur/cache-extensions@8828d749a642ae651470bd7713c2266c82cac102 # pin@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: php-v1

      - name: Cache PHP extensions
        uses: actions/cache@1c6fb82ebbd610035c324e764e5e74d0e82f8a60 # pin@v2
        with:
          path: ${{ steps.ext-cache.outputs.dir }}
          key: ${{ steps.ext-cache.outputs.key }}
          restore-keys: ${{ steps.ext-cache.outputs.key }}

      - name: Setup PHP environment
        uses: shivammathur/setup-php@ed52ff9a52991475b075a4c2144f7276195e8620 # pin@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: ${{ env.ini }}
          coverage: pcov
          tools: phpunit:9.5.10, psalm:4.11.2

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Cache analysis data
        id: finishPrepare
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
        with:
          path: ~/.cache/psalm
          key: backend-analysis-${{ matrix.php }}

      - name: Run tests
        if: always() && steps.finishPrepare.outcome == 'success'
        run: phpunit --coverage-clover ${{ github.workspace }}/clover.xml

      - name: Statically analyze using Psalm
        if: always() && steps.finishPrepare.outcome == 'success'
        run: psalm --output-format=github --php-version=${{ matrix.php }} --report=sarif/psalm.sarif --report-show-info=false

      - name: Upload coverage results to Codecov
        uses: codecov/codecov-action@a1ed4b322b4b38cb846afb5a0ebfa17086917d27 # pin@v1
        with:
          file: ${{ github.workspace }}/clover.xml
          flags: backend
          env_vars: PHP
        env:
          PHP: ${{ matrix.php }}
